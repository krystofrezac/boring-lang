BoringLang {
  space := " " | "\t"

  Program = | Program newLine+ Program                                          -- statements
            | Statement                                                         -- endStatement
            | newLine* Program newLine*                                         -- wrappedInEmptyLines


  Statement = | VariableDeclaration
              | Expression

  VariableDeclaration = identifier valueAssignmentOperator Expression

  Expression = | FunctionCall
               | FunctionDeclaration
               | number
               | string
               | identifier
               | Block
  identifier = (letter | "!")+
  number = digit+
  string = "\"" ("\u{0021}" | "\u{0023}".."\u{00FF}")* "\""
  Block = "{" newLine* BlockStatement* "}"
  BlockStatement = | Statement newLine+ BlockStatement                          -- statements
                   | Expression newLine*                                        -- endStatement

  FunctionDeclaration = "(" FunctionParameters ")" Expression
  FunctionParameters = | FunctionParametr "," FunctionParameters                -- parametr
                       | FunctionParametr                                       --endParametr
                       | ""                                                     --noParametr
  FunctionParametr = letter+


  FunctionCall = identifier"(" FunctionArguments ")"
  FunctionArguments = | FunctionArgument "," FunctionArguments                  -- arguments
                      | FunctionArgument                                        --endArgument
                      | ""                                                      --noArgument
  FunctionArgument = Expression 


  valueAssignmentOperator = "="
  typeAssignmentOperator = ":"

  newLine = "\n"
}